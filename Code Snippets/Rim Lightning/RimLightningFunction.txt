fixed3 RimLighting(float3 viewDir, float3 normal)
{
    half rim = 1.0 - saturate(dot(normalize(viewDir), normal));
    rim = _RimIntensity * pow(rim, _RimPower);
    return rim * _RimColor.rgb;
}

void surf (Input IN, inout SurfaceOutputStandard o)
{
    fixed2 uv = EnhancedUV(IN.uv_MainTex, IN.worldPos);
    fixed4 c = tex2D(_MainTex, uv) * _Color;
    half fresnel = pow(1.0 - dot(normalize(IN.viewDir), ComputeNormal(IN.worldPos)), _FresnelPower);
    
    fixed3 normal = ComputeNormal(IN.worldPos);
    fixed3 rimEffect = RimLighting(IN.viewDir, normal);

    o.Albedo = lerp(c.rgb + rimEffect, _Color.rgb * _FresnelIntensity, fresnel);
    o.Metallic = _Metallic;
    o.Smoothness = _Glossiness;
    o.Alpha = c.a;
    o.Normal = normal;
}

