Shader "Custom/SimpleWaterShader"
{
    Properties
    {
        _Color ("Color", Color) = (0,0.4,0.7,0.6) // Defaulted to a blue color with some transparency
        _Glossiness ("Smoothness", Range(0,1)) = 0.5
        _Metallic ("Metallic", Range(0,1)) = 0.0
        _WaveHeight("Wave Height", Range(0,1)) = 0.1
        _WaveSpeed("Wave Speed", Range(0,2)) = 1.0
    }
    SubShader
    {
        Tags { "RenderType"="Transparent" "Queue"="Transparent"}
        LOD 200

        CGPROGRAM
        #pragma surface surf Standard fullforwardshadows

        #pragma target 3.0

        struct Input
        {
            float3 worldPos;
        };

        half _Glossiness;
        half _Metallic;
        fixed4 _Color;
        half _WaveHeight;
        half _WaveSpeed;

        void surf (Input IN, inout SurfaceOutputStandard o)
        {
            // Simple wave function
            float wave = sin(IN.worldPos.x * _WaveSpeed + _Time.y) * cos(IN.worldPos.z * _WaveSpeed + _Time.y) * _WaveHeight;
            
            o.Albedo = _Color.rgb;
            o.Metallic = _Metallic;
            o.Smoothness = _Glossiness;
            o.Alpha = _Color.a;
            
            // Modify the normal for a basic reflection
            o.Normal = normalize(float3(0,1 - _WaveHeight, wave));
        }
        ENDCG
    }
    FallBack "Diffuse"
}
